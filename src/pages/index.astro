---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import { render } from 'astro:content';

const posts = (await getCollection('posts')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

async function getPostPreview(post: any) {
	const content = post.body;
	const readMoreIndex = content.indexOf('<!-- more -->');
	const preview = readMoreIndex === -1 ? content : content.slice(0, readMoreIndex);
	
	try {
		const { Content } = await render({
			collection: 'posts',
			id: post.id,
			body: preview,
			data: post.data
		});
		return Content;
	} catch (error) {
		console.error('Error rendering preview:', error);
		return preview;
	}
}

function estimateReadingTime(content: string) {
	const wordsPerMinute = 200;
	const words = content.trim().split(/\s+/).length;
	const minutes = Math.ceil(words / wordsPerMinute);
	return minutes;
}
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 800px;
				max-width: calc(100% - 2em);
				margin: 0 auto;
				padding: var(--space-l) var(--space-s);
			}
			ul {
				list-style: none;
				padding: 0;
				margin: 0;
			}
			li {
				margin-bottom: 4rem;
			}
			li time {
				color: var(--theme-secondary);
				display: block;
				margin-bottom: 0.5rem;
				font-size: 0.9em;
			}
			li h2 {
				margin: 0 0 0.5rem 0;
			}
			li h2 a {
				text-decoration: none;
				color: inherit;
			}
			li h2 a:hover {
				color: var(--theme-accent);
			}
			li .content {
				margin: 1rem 0 0 0;
			}
			li .content :global(p) {
				margin: 1rem 0;
			}
			li .content :global(p:first-child) {
				margin-top: 0;
			}
			li .meta {
				display: flex;
				align-items: center;
				gap: var(--space-s);
				margin-top: var(--space-s);
			}
			li .reading-time {
				color: rgb(var(--gray));
				font-size: 0.9em;
			}
			li .read-more {
				display: inline-flex;
				align-items: center;
				gap: var(--space-2xs);
				color: var(--theme-accent);
				text-decoration: none;
				font-weight: bold;
			}
			li .read-more:hover {
				text-decoration: underline;
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<ul>
				{posts.map(async (post) => {
					const Preview = await getPostPreview(post);
					const readingTime = estimateReadingTime(post.body || '');
					return (
						<li>
							<time datetime={post.data.pubDate.toISOString()}>
								<FormattedDate date={post.data.pubDate} />
							</time>
							<h2>
								<a href={`/${post.id}`}>{post.data.title}</a>
							</h2>
							{post.body && (
								<>
									<div class="content">
										{typeof Preview === 'function' ? <Preview /> : <div set:html={Preview} />}
									</div>
									<div class="meta">
										<span class="reading-time">{readingTime} min read</span>
										<a href={`/${post.id}`} class="read-more">
											Read more <i class="fas fa-arrow-right"></i>
										</a>
									</div>
								</>
							)}
						</li>
					);
				})}
			</ul>
		</main>
		<Footer />
	</body>
</html>
