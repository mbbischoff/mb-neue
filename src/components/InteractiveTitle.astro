---
// Component props interface
interface Props {
  minimalLayout?: boolean; // Whether to use minimal styling
  title: string;          // The title text to display
}

const { minimalLayout = false, title } = Astro.props;
---

<h1 class={`site-title ${minimalLayout ? 'minimal' : ''}`}>
  <a href="/" id="title-link">{title}</a>
</h1>

{
  !minimalLayout && (
    <p class="site-description">
      <strong>mb <span class="last-name">bischoff</span></strong> is a <em>girlie about town</em> making <a href="https://lickability.com">software</a>, <a href="/archive">sentences</a>, & <a href="https://absolutelycrushed.com">sounds</a>.
    </p>
  )
}

<script>
  // Get reference to the title link
  const titleLink = document.getElementById('title-link');
  const title = titleLink?.parentElement;
  
  if (!titleLink || !title) {
    console.error('Could not find title link or title element');
  } else {
    // Base values for font variations
    const baseCasl = 1;    // Casual axis: 0 = monospace, 1 = casual
    const baseWght = 976;  // Weight axis: 300-1000, higher = bolder
    const baseSlnt = -10;  // Slant axis: -15 to 0, lower = more slanted
    const baseCrsv = 1;    // Cursive axis: 0 = linear, 1 = cursive
    
    titleLink.addEventListener('mouseenter', () => {
      // Generate new random target values for hover state
      const randomCasl = Math.random() * 1;  // Random value between 0 and 1
      const randomWght = 100 + Math.random() * 876; // Random value between 100 and 976
      const randomSlnt = -10 + Math.random() * 10;  // Random value between -10 and 0
      const randomCrsv = Math.random();  // Random value between 0 and 1
      
      (title as HTMLElement).style.transition = 'font-variation-settings 0.5s cubic-bezier(0.34, 1.3, 0.64, 1)';
      (title as HTMLElement).style.fontVariationSettings = `"CASL" ${randomCasl}, "wght" ${randomWght}, "slnt" ${randomSlnt}, "CRSV" ${randomCrsv}`;
    });
    
    titleLink.addEventListener('mouseleave', () => {
      (title as HTMLElement).style.transition = 'font-variation-settings 0.5s cubic-bezier(0.34, 1.1, 0.64, 1)';
      (title as HTMLElement).style.fontVariationSettings = `"CASL" ${baseCasl}, "wght" ${baseWght}, "slnt" ${baseSlnt}, "CRSV" ${baseCrsv}`;
    });
  }
</script>

<style>
  /* Base title styling with Recursive font */
  .site-title {
    font-size: var(--step-5);
    line-height: 1;
    margin: 0 0 var(--space-m) 0;
    text-align: center;
    font-weight: var(--font-weight-black);
    text-decoration: none;
    font-family: 'Recursive', sans-serif;
    font-variation-settings: "CASL" 1, "wght" var(--font-weight-black), "slnt" var(--name-slant), "CRSV" 1;
  }

  /* Title link styling */
  .site-title a {
    text-decoration: none;
    color: inherit;
    border-bottom: none;
    padding-bottom: 0;
    display: inline-block;
    transform-origin: center center;
    transition: transform 0.5s cubic-bezier(0.34, 1.1, 0.64, 1), color 0.5s cubic-bezier(0.34, 1.1, 0.64, 1);
  }

  /* Title hover effect */
  .site-title a:hover {
    color: var(--theme-accent);
  }

  /* Minimal layout styling */
  .site-title.minimal {
    color: var(--theme-text);
  }

  /* Description text styling */
  .site-description {
    text-align: center;
    margin-bottom: var(--space-s);
    text-wrap: balance;
  }

  /* Description link styling */
  .site-description a {
    transition: color 0.2s ease, border-bottom-color 0.2s ease;
  }

  .site-description a:hover {
    color: var(--theme-accent);
    border-bottom-color: var(--theme-accent);
  }
</style> 